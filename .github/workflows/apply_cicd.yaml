name: Terraform init and apply

on:
  push:
    branches:
      - qa
      - production
      
jobs:

  job-1:
    name: "QA-Apply"
    runs-on: [self-hosted, Schema_migrate, Linux]
    if: github.ref == 'refs/heads/qa'
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: assaya
          POSTGRES_PASSWORD: assaya
          POSTGRES_DB: migrate
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0
        with:
          fetch-depth: 0
      - name: apply schema changes to QA databse
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
              cd qa/
              terraform init
              terraform apply -var dev_url="postgres://assaya:assaya@localhost:5432/migrate?sslmode=disable" -var url="${{ secrets.QA_DB_URL }}" --auto-approve

  job-2:
    name: "Prod-apply"
    runs-on: [self-hosted, Schema_migrate, Linux]
    if: github.ref == 'refs/heads/production'
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: assaya
          POSTGRES_PASSWORD: assaya
          POSTGRES_DB: migrate
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0
        with:
          fetch-depth: 0
      - name: apply schema changes to PROD databse
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
              cd PROD/
              terraform init
              terraform apply -var dev_url="postgres://assaya:assaya@localhost:5432/migrate?sslmode=disable" -var url="${{ secrets.PROD_DB_URL }}" --auto-approve
